{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\r\nimport {googleAI} from '@genkit-ai/googleai';\r\n\r\nexport const ai = genkit({\r\n  plugins: [googleAI()],\r\n  model: 'googleai/gemini-2.0-flash',\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/ai/flows/process-voice-command.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview This file defines a Genkit flow for processing voice commands to add stock to the inventory.\r\n *\r\n * - processVoiceCommand - A function that processes voice commands and adds stock to the inventory.\r\n * - ProcessVoiceCommandInput - The input type for the processVoiceCommand function.\r\n * - ProcessVoiceCommandOutput - The return type for the processVoiceCommand function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst ProcessVoiceCommandInputSchema = z.object({\r\n  voiceCommand: z\r\n    .string()\r\n    .describe('The voice command transcribed to text.'),\r\n});\r\nexport type ProcessVoiceCommandInput = z.infer<typeof ProcessVoiceCommandInputSchema>;\r\n\r\nconst ProcessVoiceCommandOutputSchema = z.object({\r\n  intent: z.string().describe('The intent of the voice command (e.g., ADD_STOCK).'),\r\n  product_name: z.string().describe('The name of the product.'),\r\n  quantity: z.number().describe('The quantity of the product to add to stock.'),\r\n});\r\nexport type ProcessVoiceCommandOutput = z.infer<typeof ProcessVoiceCommandOutputSchema>;\r\n\r\nexport async function processVoiceCommand(input: ProcessVoiceCommandInput): Promise<ProcessVoiceCommandOutput> {\r\n  return processVoiceCommandFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'processVoiceCommandPrompt',\r\n  input: {schema: ProcessVoiceCommandInputSchema},\r\n  output: {schema: ProcessVoiceCommandOutputSchema},\r\n  prompt: `Given the user request: \"{{voiceCommand}}\", convert it into a JSON command.\r\n  The valid intents are \\\"ADD_STOCK\\\".\r\n  Extract entities like \\\"product_name\\\" and \\\"quantity\\\".\r\n  Return a JSON string.\r\n  {\r\n    \\\"intent\\\": \\\"ADD_STOCK\\\",\r\n    \\\"product_name\\\": \\\"STRING\\\".\r\n    \\\"quantity\\\": \\\"INTEGER\\\"\r\n  }`,\r\n});\r\n\r\nconst processVoiceCommandFlow = ai.defineFlow(\r\n  {\r\n    name: 'processVoiceCommandFlow',\r\n    inputSchema: ProcessVoiceCommandInputSchema,\r\n    outputSchema: ProcessVoiceCommandOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGO,eAAe,oBAAoB,KAA+B;IACvE,OAAO,wBAAwB;AACjC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA8B;IAC9C,QAAQ;QAAC,QAAQ;IAA+B;IAChD,QAAQ,CAAC;;;;;;;;GAQR,CAAC;AACJ;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA5BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/ai/flows/process-voice-command-add-credit.ts"],"sourcesContent":["'use server';\r\n/**\r\n * @fileOverview A voice command processing AI agent for adding credit transactions.\r\n *\r\n * - processVoiceCommandAddCredit - A function that handles the voice command processing to add a credit transaction.\r\n * - ProcessVoiceCommandAddCreditInput - The input type for the processVoiceCommandAddCredit function.\r\n * - ProcessVoiceCommandAddCreditOutput - The return type for the processVoiceCommandAddCredit function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst ProcessVoiceCommandAddCreditInputSchema = z.object({\r\n  voiceCommand: z\r\n    .string()\r\n    .describe(\"The user's voice command as a transcribed text string.\"),\r\n});\r\nexport type ProcessVoiceCommandAddCreditInput = z.infer<typeof ProcessVoiceCommandAddCreditInputSchema>;\r\n\r\nconst ProcessVoiceCommandAddCreditOutputSchema = z.object({\r\n  intent: z.literal('ADD_CREDIT').describe('The intent of the voice command.'),\r\n  entities: z.object({\r\n    customer_name: z.string().describe('The name of the customer.'),\r\n    amount: z.number().describe('The amount of credit to add.'),\r\n  }).describe('The entities extracted from the voice command.'),\r\n  confidence_score: z.number().optional().describe('The confidence score of the LLM.'),\r\n});\r\nexport type ProcessVoiceCommandAddCreditOutput = z.infer<typeof ProcessVoiceCommandAddCreditOutputSchema>;\r\n\r\nexport async function processVoiceCommandAddCredit(input: ProcessVoiceCommandAddCreditInput): Promise<ProcessVoiceCommandAddCreditOutput> {\r\n  return processVoiceCommandAddCreditFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'processVoiceCommandAddCreditPrompt',\r\n  input: {schema: ProcessVoiceCommandAddCreditInputSchema},\r\n  output: {schema: ProcessVoiceCommandAddCreditOutputSchema},\r\n  prompt: `Given the user request: \"{{voiceCommand}}\", convert it into a JSON command.\r\n\r\nThe valid intents are: ADD_STOCK, RECORD_SALE, CHECK_BALANCE, ADD_CREDIT.\r\n\r\nExtract entities like \"product_name\", \"quantity\", \"customer_name\", and \"amount\".\r\n\r\nEnsure that the intent is ADD_CREDIT, and the entities include customer_name and amount.\r\n\r\nExample JSON:\r\n{\r\n  \"intent\": \"ADD_CREDIT\",\r\n  \"entities\": {\r\n    \"customer_name\": \"STRING\",\r\n    \"amount\": \"DOUBLE\"\r\n  },\r\n  \"confidence_score\": \"FLOAT\" // Optional\r\n}\r\n\r\nReturn a JSON object:\r\n`,\r\n});\r\n\r\nconst processVoiceCommandAddCreditFlow = ai.defineFlow(\r\n  {\r\n    name: 'processVoiceCommandAddCreditFlow',\r\n    inputSchema: ProcessVoiceCommandAddCreditInputSchema,\r\n    outputSchema: ProcessVoiceCommandAddCreditOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,0CAA0C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvD,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,2CAA2C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxD,QAAQ,uIAAA,CAAA,IAAC,CAAC,OAAO,CAAC,cAAc,QAAQ,CAAC;IACzC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACnC,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,GAAG,QAAQ,CAAC;IACZ,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACnD;AAGO,eAAe,6BAA6B,KAAwC;IACzF,OAAO,iCAAiC;AAC1C;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAuC;IACvD,QAAQ;QAAC,QAAQ;IAAwC;IACzD,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;AAmBX,CAAC;AACD;AAEA,MAAM,mCAAmC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAvCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/ai/flows/process-voice-command-check-balance.ts"],"sourcesContent":["'use server';\r\n/**\r\n * @fileOverview Processes voice commands to check a party's current balance.\r\n *\r\n * - processVoiceCommandCheckBalance - A function that handles the voice command processing for checking balance.\r\n * - ProcessVoiceCommandCheckBalanceInput - The input type for the processVoiceCommandCheckBalance function.\r\n * - ProcessVoiceCommandCheckBalanceOutput - The return type for the processVoiceCommandCheckBalance function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst ProcessVoiceCommandCheckBalanceInputSchema = z.object({\r\n  transcribedText: z\r\n    .string()\r\n    .describe('The transcribed text from the user voice command.'),\r\n});\r\nexport type ProcessVoiceCommandCheckBalanceInput = z.infer<\r\n  typeof ProcessVoiceCommandCheckBalanceInputSchema\r\n>;\r\n\r\nconst ProcessVoiceCommandCheckBalanceOutputSchema = z.object({\r\n  intent: z.literal('CHECK_BALANCE').describe('The intent of the command.'),\r\n  entities: z.object({\r\n    customer_name: z.string().describe('The name of the customer.'),\r\n  }),\r\n  confidence_score: z\r\n    .number()\r\n    .optional()\r\n    .describe('The confidence score of the LLM.'),\r\n});\r\nexport type ProcessVoiceCommandCheckBalanceOutput = z.infer<\r\n  typeof ProcessVoiceCommandCheckBalanceOutputSchema\r\n>;\r\n\r\nexport async function processVoiceCommandCheckBalance(\r\n  input: ProcessVoiceCommandCheckBalanceInput\r\n): Promise<ProcessVoiceCommandCheckBalanceOutput> {\r\n  return processVoiceCommandCheckBalanceFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'processVoiceCommandCheckBalancePrompt',\r\n  input: {schema: ProcessVoiceCommandCheckBalanceInputSchema},\r\n  output: {schema: ProcessVoiceCommandCheckBalanceOutputSchema},\r\n  prompt: `Given the user request: \"{{transcribedText}}\", convert it into a JSON command to check a party's balance. The valid intent is \"CHECK_BALANCE\". Extract entities like \"customer_name\". Return a JSON object with the intent and entities. If you are unable to extract the customer name, return null for the customer_name field.`,\r\n});\r\n\r\nconst processVoiceCommandCheckBalanceFlow = ai.defineFlow(\r\n  {\r\n    name: 'processVoiceCommandCheckBalanceFlow',\r\n    inputSchema: ProcessVoiceCommandCheckBalanceInputSchema,\r\n    outputSchema: ProcessVoiceCommandCheckBalanceOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,6CAA6C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1D,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,8CAA8C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3D,QAAQ,uIAAA,CAAA,IAAC,CAAC,OAAO,CAAC,iBAAiB,QAAQ,CAAC;IAC5C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC;IACA,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAKO,eAAe,gCACpB,KAA2C;IAE3C,OAAO,oCAAoC;AAC7C;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA0C;IAC1D,QAAQ;QAAC,QAAQ;IAA2C;IAC5D,QAAQ,CAAC,iUAAiU,CAAC;AAC7U;AAEA,MAAM,sCAAsC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAtBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/ai/flows/process-voice-command-record-sale.ts"],"sourcesContent":["'use server';\r\n/**\r\n * @fileOverview A voice command processing AI agent for recording sales.\r\n *\r\n * - processVoiceCommandRecordSale - A function that handles the voice command processing for recording sales.\r\n * - ProcessVoiceCommandRecordSaleInput - The input type for the processVoiceCommandRecordSale function.\r\n * - ProcessVoiceCommandRecordSaleOutput - The return type for the processVoiceCommandRecordSale function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst ProcessVoiceCommandRecordSaleInputSchema = z.object({\r\n  transcribedText: z\r\n    .string()\r\n    .describe('The transcribed text from the user\\'s voice command.'),\r\n});\r\nexport type ProcessVoiceCommandRecordSaleInput = z.infer<\r\n  typeof ProcessVoiceCommandRecordSaleInputSchema\r\n>;\r\n\r\nconst ProcessVoiceCommandRecordSaleOutputSchema = z.object({\r\n  intent: z.literal('RECORD_SALE').describe('The intent of the voice command.'),\r\n  entities: z.object({\r\n    product_name: z.string().describe('The name of the product sold.'),\r\n    quantity: z.number().describe('The quantity of the product sold.'),\r\n  }),\r\n  confidence_score: z\r\n    .number()\r\n    .optional()\r\n    .describe('The confidence score of the LLM.'),\r\n});\r\nexport type ProcessVoiceCommandRecordSaleOutput = z.infer<\r\n  typeof ProcessVoiceCommandRecordSaleOutputSchema\r\n>;\r\n\r\nexport async function processVoiceCommandRecordSale(\r\n  input: ProcessVoiceCommandRecordSaleInput\r\n): Promise<ProcessVoiceCommandRecordSaleOutput> {\r\n  return processVoiceCommandRecordSaleFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'processVoiceCommandRecordSalePrompt',\r\n  input: {schema: ProcessVoiceCommandRecordSaleInputSchema},\r\n  output: {schema: ProcessVoiceCommandRecordSaleOutputSchema},\r\n  prompt: `Given the user request: \"{{transcribedText}}\", convert it into a JSON command.\r\n\r\nThe valid intent is \"RECORD_SALE\".\r\n\r\nExtract entities like \"product_name\" and \"quantity\".\r\n\r\nEnsure the quantity is extracted as a number.\r\n\r\nReturn a confidence score if available.\r\n\r\nOutput should be in the following JSON format:\r\n\r\n{  \"intent\": \"RECORD_SALE\",\r\n  \"entities\": {\r\n    \"product_name\": \"STRING\",\r\n    \"quantity\": INTEGER,\r\n  },\r\n  \"confidence_score\": FLOAT // Optional\r\n}\r\n`,\r\n});\r\n\r\nconst processVoiceCommandRecordSaleFlow = ai.defineFlow(\r\n  {\r\n    name: 'processVoiceCommandRecordSaleFlow',\r\n    inputSchema: ProcessVoiceCommandRecordSaleInputSchema,\r\n    outputSchema: ProcessVoiceCommandRecordSaleOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2CAA2C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxD,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,4CAA4C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzD,QAAQ,uIAAA,CAAA,IAAC,CAAC,OAAO,CAAC,eAAe,QAAQ,CAAC;IAC1C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC;IACA,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAKO,eAAe,8BACpB,KAAyC;IAEzC,OAAO,kCAAkC;AAC3C;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwC;IACxD,QAAQ;QAAC,QAAQ;IAAyC;IAC1D,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;AAmBX,CAAC;AACD;AAEA,MAAM,oCAAoC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAzCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/lib/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport {\r\n  processVoiceCommand,\r\n  ProcessVoiceCommandInput,\r\n} from '@/ai/flows/process-voice-command';\r\nimport {\r\n  processVoiceCommandAddCredit,\r\n  ProcessVoiceCommandAddCreditInput,\r\n} from '@/ai/flows/process-voice-command-add-credit';\r\nimport {\r\n  processVoiceCommandCheckBalance,\r\n  ProcessVoiceCommandCheckBalanceInput,\r\n} from '@/ai/flows/process-voice-command-check-balance';\r\nimport {\r\n  processVoiceCommandRecordSale,\r\n  ProcessVoiceCommandRecordSaleInput,\r\n} from '@/ai/flows/process-voice-command-record-sale';\r\nimport { z } from 'zod';\r\n\r\nconst commandSchema = z.string().min(1, { message: 'Command cannot be empty.' });\r\n\r\ntype VoiceCommandResult =\r\n  | { type: 'ADD_STOCK'; data: any }\r\n  | { type: 'RECORD_SALE'; data: any }\r\n  | { type: 'ADD_CREDIT'; data: any }\r\n  | { type: 'CHECK_BALANCE'; data: any }\r\n  | { error: string; details?: string };\r\n\r\nexport async function handleVoiceCommand(\r\n  command: string\r\n): Promise<VoiceCommandResult> {\r\n  const validation = commandSchema.safeParse(command);\r\n  if (!validation.success) {\r\n    return { error: 'Invalid command' };\r\n  }\r\n\r\n  const lowerCaseCommand = command.toLowerCase();\r\n\r\n  try {\r\n    if (\r\n      lowerCaseCommand.includes('stock') ||\r\n      lowerCaseCommand.includes('add')\r\n    ) {\r\n      const result = await processVoiceCommand({ voiceCommand: command });\r\n      return { type: 'ADD_STOCK', data: result };\r\n    }\r\n    if (\r\n      lowerCaseCommand.includes('sale') ||\r\n      lowerCaseCommand.includes('bech') ||\r\n      lowerCaseCommand.includes('sold')\r\n    ) {\r\n      const result = await processVoiceCommandRecordSale({\r\n        transcribedText: command,\r\n      });\r\n      return { type: 'RECORD_SALE', data: result };\r\n    }\r\n    if (\r\n      lowerCaseCommand.includes('credit') ||\r\n      lowerCaseCommand.includes('udhaar')\r\n    ) {\r\n      const result = await processVoiceCommandAddCredit({\r\n        voiceCommand: command,\r\n      });\r\n      return { type: 'ADD_CREDIT', data: result };\r\n    }\r\n    if (\r\n      lowerCaseCommand.includes('balance') ||\r\n      lowerCaseCommand.includes('khata')\r\n    ) {\r\n      const result = await processVoiceCommandCheckBalance({\r\n        transcribedText: command,\r\n      });\r\n      return { type: 'CHECK_BALANCE', data: result };\r\n    }\r\n\r\n    return { error: 'Could not determine the intent of your command.' };\r\n  } catch (e: any) {\r\n    console.error('AI flow failed:', e);\r\n    return {\r\n      error: 'Failed to process command.',\r\n      details: e.message || 'An unknown error occurred.',\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAIA;AAIA;AAIA;AAIA;;;;;;;;;AAEA,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAAE,SAAS;AAA2B;AASvE,eAAe,mBACpB,OAAe;IAEf,MAAM,aAAa,cAAc,SAAS,CAAC;IAC3C,IAAI,CAAC,WAAW,OAAO,EAAE;QACvB,OAAO;YAAE,OAAO;QAAkB;IACpC;IAEA,MAAM,mBAAmB,QAAQ,WAAW;IAE5C,IAAI;QACF,IACE,iBAAiB,QAAQ,CAAC,YAC1B,iBAAiB,QAAQ,CAAC,QAC1B;YACA,MAAM,SAAS,MAAM,CAAA,GAAA,iJAAA,CAAA,sBAAmB,AAAD,EAAE;gBAAE,cAAc;YAAQ;YACjE,OAAO;gBAAE,MAAM;gBAAa,MAAM;YAAO;QAC3C;QACA,IACE,iBAAiB,QAAQ,CAAC,WAC1B,iBAAiB,QAAQ,CAAC,WAC1B,iBAAiB,QAAQ,CAAC,SAC1B;YACA,MAAM,SAAS,MAAM,CAAA,GAAA,mKAAA,CAAA,gCAA6B,AAAD,EAAE;gBACjD,iBAAiB;YACnB;YACA,OAAO;gBAAE,MAAM;gBAAe,MAAM;YAAO;QAC7C;QACA,IACE,iBAAiB,QAAQ,CAAC,aAC1B,iBAAiB,QAAQ,CAAC,WAC1B;YACA,MAAM,SAAS,MAAM,CAAA,GAAA,kKAAA,CAAA,+BAA4B,AAAD,EAAE;gBAChD,cAAc;YAChB;YACA,OAAO;gBAAE,MAAM;gBAAc,MAAM;YAAO;QAC5C;QACA,IACE,iBAAiB,QAAQ,CAAC,cAC1B,iBAAiB,QAAQ,CAAC,UAC1B;YACA,MAAM,SAAS,MAAM,CAAA,GAAA,qKAAA,CAAA,kCAA+B,AAAD,EAAE;gBACnD,iBAAiB;YACnB;YACA,OAAO;gBAAE,MAAM;gBAAiB,MAAM;YAAO;QAC/C;QAEA,OAAO;YAAE,OAAO;QAAkD;IACpE,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO;YACL,OAAO;YACP,SAAS,EAAE,OAAO,IAAI;QACxB;IACF;AACF;;;IAvDsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {handleVoiceCommand as '408f8addcb65cdd1bc687ab6cb7896434bb647c8e8'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/lib/data.ts"],"sourcesContent":["import type { Product, Party, Transaction } from './types';\r\n\r\nexport const mockProducts: Product[] = [\r\n  {\r\n    product_id: 'prod_1',\r\n    name: 'Parle-G Biscuit',\r\n    purchase_price: 8,\r\n    selling_price: 10,\r\n    current_stock: 150,\r\n    low_stock_threshold: 20,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 30,\r\n  },\r\n  {\r\n    product_id: 'prod_2',\r\n    name: 'Amul Milk',\r\n    purchase_price: 25,\r\n    selling_price: 28,\r\n    current_stock: 40,\r\n    low_stock_threshold: 10,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 20,\r\n  },\r\n  {\r\n    product_id: 'prod_3',\r\n    name: 'Sunfeast Dark Fantasy',\r\n    purchase_price: 28,\r\n    selling_price: 35,\r\n    current_stock: 80,\r\n    low_stock_threshold: 15,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 15,\r\n  },\r\n  {\r\n    product_id: 'prod_4',\r\n    name: 'Lays Chips',\r\n    purchase_price: 16,\r\n    selling_price: 20,\r\n    current_stock: 200,\r\n    low_stock_threshold: 50,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 10,\r\n  },\r\n];\r\n\r\nexport const mockParties: Party[] = [\r\n  {\r\n    party_id: 'party_1',\r\n    name: 'Ankit Sharma',\r\n    phone_number: '9876543210',\r\n    type: 'CUSTOMER',\r\n    current_balance: 250,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 50,\r\n  },\r\n  {\r\n    party_id: 'party_2',\r\n    name: 'Priya Patel',\r\n    phone_number: '8765432109',\r\n    type: 'CUSTOMER',\r\n    current_balance: -150,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 45,\r\n  },\r\n  {\r\n    party_id: 'party_3',\r\n    name: 'Global Distributors',\r\n    phone_number: '7654321098',\r\n    type: 'SUPPLIER',\r\n    current_balance: -5000,\r\n    created_at: Date.now() - 1000 * 60 * 60 * 24 * 100,\r\n  },\r\n];\r\n\r\nexport const mockTransactions: Transaction[] = [\r\n  {\r\n    transaction_id: 'txn_1',\r\n    type: 'SALE',\r\n    amount: 50,\r\n    product_name: 'Parle-G Biscuit',\r\n    quantity: 5,\r\n    timestamp: Date.now() - 1000 * 60 * 2,\r\n  },\r\n  {\r\n    transaction_id: 'txn_2',\r\n    type: 'CREDIT',\r\n    amount: 100,\r\n    party_name: 'Ankit Sharma',\r\n    notes: 'For future purchases',\r\n    timestamp: Date.now() - 1000 * 60 * 60,\r\n  },\r\n  {\r\n    transaction_id: 'txn_3',\r\n    type: 'STOCK_ADD',\r\n    amount: 800,\r\n    product_name: 'Lays Chips',\r\n    quantity: 50,\r\n    timestamp: Date.now() - 1000 * 60 * 60 * 3,\r\n  },\r\n  {\r\n    transaction_id: 'txn_4',\r\n    type: 'SALE',\r\n    amount: 70,\r\n    product_name: 'Sunfeast Dark Fantasy',\r\n    quantity: 2,\r\n    timestamp: Date.now() - 1000 * 60 * 60 * 5,\r\n  },\r\n  {\r\n    transaction_id: 'txn_5',\r\n    type: 'PAYMENT_MADE',\r\n    amount: 2000,\r\n    party_name: 'Global Distributors',\r\n    timestamp: Date.now() - 1000 * 60 * 60 * 24,\r\n  },\r\n];\r\n"],"names":[],"mappings":";;;;;AAEO,MAAM,eAA0B;IACrC;QACE,YAAY;QACZ,MAAM;QACN,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,qBAAqB;QACrB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;IACA;QACE,YAAY;QACZ,MAAM;QACN,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,qBAAqB;QACrB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;IACA;QACE,YAAY;QACZ,MAAM;QACN,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,qBAAqB;QACrB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;IACA;QACE,YAAY;QACZ,MAAM;QACN,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,qBAAqB;QACrB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;CACD;AAEM,MAAM,cAAuB;IAClC;QACE,UAAU;QACV,MAAM;QACN,cAAc;QACd,MAAM;QACN,iBAAiB;QACjB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;IACA;QACE,UAAU;QACV,MAAM;QACN,cAAc;QACd,MAAM;QACN,iBAAiB,CAAC;QAClB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;IACA;QACE,UAAU;QACV,MAAM;QACN,cAAc;QACd,MAAM;QACN,iBAAiB,CAAC;QAClB,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK,KAAK;IACjD;CACD;AAEM,MAAM,mBAAkC;IAC7C;QACE,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,cAAc;QACd,UAAU;QACV,WAAW,KAAK,GAAG,KAAK,OAAO,KAAK;IACtC;IACA;QACE,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,YAAY;QACZ,OAAO;QACP,WAAW,KAAK,GAAG,KAAK,OAAO,KAAK;IACtC;IACA;QACE,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,cAAc;QACd,UAAU;QACV,WAAW,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK;IAC3C;IACA;QACE,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,cAAc;QACd,UAAU;QACV,WAAW,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK;IAC3C;IACA;QACE,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,YAAY;QACZ,WAAW,KAAK,GAAG,KAAK,OAAO,KAAK,KAAK;IAC3C;CACD","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1023, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/dashboard/recent-transactions.tsx"],"sourcesContent":["import { mockTransactions } from \"@/lib/data\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\nconst getBadgeVariant = (\r\n  type:\r\n    | \"SALE\"\r\n    | \"CREDIT\"\r\n    | \"STOCK_ADD\"\r\n    | \"PAYMENT_MADE\"\r\n    | \"DEBIT\"\r\n    | \"PAYMENT_RECEIVED\"\r\n) => {\r\n  switch (type) {\r\n    case \"SALE\":\r\n      return \"default\";\r\n    case \"CREDIT\":\r\n    case \"PAYMENT_RECEIVED\":\r\n      return \"secondary\";\r\n    case \"STOCK_ADD\":\r\n      return \"outline\";\r\n    case \"PAYMENT_MADE\":\r\n    case \"DEBIT\":\r\n      return \"destructive\";\r\n    default:\r\n      return \"default\";\r\n  }\r\n};\r\n\r\nexport function RecentTransactions() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Recent Transactions</CardTitle>\r\n        <CardDescription>\r\n          A log of the most recent activities in your store.\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Type</TableHead>\r\n              <TableHead>Details</TableHead>\r\n              <TableHead className=\"text-right\">Amount</TableHead>\r\n              <TableHead className=\"text-right\">Time</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {mockTransactions.slice(0, 5).map((tx) => (\r\n              <TableRow key={tx.transaction_id}>\r\n                <TableCell>\r\n                  <Badge variant={getBadgeVariant(tx.type)}>\r\n                    {tx.type.replace(\"_\", \" \")}\r\n                  </Badge>\r\n                </TableCell>\r\n                <TableCell className=\"font-medium\">\r\n                  {tx.type === \"SALE\" && `${tx.quantity}x ${tx.product_name}`}\r\n                  {tx.type === \"CREDIT\" && `Credit to ${tx.party_name}`}\r\n                  {tx.type === \"STOCK_ADD\" &&\r\n                    `${tx.quantity}x ${tx.product_name} Added`}\r\n                  {(tx.type === \"PAYMENT_MADE\" ||\r\n                    tx.type === \"PAYMENT_RECEIVED\") &&\r\n                    `To ${tx.party_name}`}\r\n                </TableCell>\r\n                <TableCell className=\"text-right font-mono\">\r\n                  ₹{tx.amount.toFixed(2)}\r\n                </TableCell>\r\n                <TableCell className=\"text-right text-xs text-muted-foreground\">\r\n                  {formatDistanceToNow(new Date(tx.timestamp), {\r\n                    addSuffix: true,\r\n                  })}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAOA;AAQA;AACA;;;;;;;AAEA,MAAM,kBAAkB,CACtB;IAQA,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,SAAS;IACd,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAInB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;kDACP,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAa;;;;;;kDAClC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAa;;;;;;;;;;;;;;;;;sCAGtC,8OAAC,iIAAA,CAAA,YAAS;sCACP,kHAAA,CAAA,mBAAgB,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,mBACjC,8OAAC,iIAAA,CAAA,WAAQ;;sDACP,8OAAC,iIAAA,CAAA,YAAS;sDACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAS,gBAAgB,GAAG,IAAI;0DACpC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;;;;;;;;;;;sDAG1B,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;;gDAClB,GAAG,IAAI,KAAK,UAAU,GAAG,GAAG,QAAQ,CAAC,EAAE,EAAE,GAAG,YAAY,EAAE;gDAC1D,GAAG,IAAI,KAAK,YAAY,CAAC,UAAU,EAAE,GAAG,UAAU,EAAE;gDACpD,GAAG,IAAI,KAAK,eACX,GAAG,GAAG,QAAQ,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC;gDAC3C,CAAC,GAAG,IAAI,KAAK,kBACZ,GAAG,IAAI,KAAK,kBAAkB,KAC9B,CAAC,GAAG,EAAE,GAAG,UAAU,EAAE;;;;;;;sDAEzB,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;;gDAAuB;gDACxC,GAAG,MAAM,CAAC,OAAO,CAAC;;;;;;;sDAEtB,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAClB,CAAA,GAAA,mJAAA,CAAA,sBAAmB,AAAD,EAAE,IAAI,KAAK,GAAG,SAAS,GAAG;gDAC3C,WAAW;4CACb;;;;;;;mCArBW,GAAG,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8B9C","debugId":null}},
    {"offset": {"line": 1212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/dashboard/stats-cards.tsx"],"sourcesContent":["import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { DollarSign, Package, Users, ShoppingCart } from \"lucide-react\";\r\n\r\nconst stats = [\r\n  {\r\n    title: \"Total Revenue\",\r\n    value: \"₹45,231.89\",\r\n    change: \"+20.1% from last month\",\r\n    icon: DollarSign,\r\n  },\r\n  {\r\n    title: \"Sales\",\r\n    value: \"+1,250\",\r\n    change: \"+18.3% from last month\",\r\n    icon: ShoppingCart,\r\n  },\r\n  {\r\n    title: \"Total Parties\",\r\n    value: \"57\",\r\n    change: \"+3 since last month\",\r\n    icon: Users,\r\n  },\r\n  {\r\n    title: \"Inventory Items\",\r\n    value: \"234\",\r\n    change: \"5 low on stock\",\r\n    icon: Package,\r\n  },\r\n];\r\n\r\nexport function StatsCards() {\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-4\">\r\n      {stats.map((stat) => (\r\n        <Card key={stat.title}>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\r\n            <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{stat.value}</div>\r\n            <p className=\"text-xs text-muted-foreground\">{stat.change}</p>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAMA;AAAA;AAAA;AAAA;;;;AAEA,MAAM,QAAQ;IACZ;QACE,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,kNAAA,CAAA,aAAU;IAClB;IACA;QACE,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,sNAAA,CAAA,eAAY;IACpB;IACA;QACE,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,oMAAA,CAAA,QAAK;IACb;IACA;QACE,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM,wMAAA,CAAA,UAAO;IACf;CACD;AAEM,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAuB,KAAK,KAAK;;;;;;0CACtD,8OAAC,KAAK,IAAI;gCAAC,WAAU;;;;;;;;;;;;kCAEvB,8OAAC,gIAAA,CAAA,cAAW;;0CACV,8OAAC;gCAAI,WAAU;0CAAsB,KAAK,KAAK;;;;;;0CAC/C,8OAAC;gCAAE,WAAU;0CAAiC,KAAK,MAAM;;;;;;;;;;;;;eAPlD,KAAK,KAAK;;;;;;;;;;AAa7B","debugId":null}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/dashboard/voice-command.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const VoiceCommand = registerClientReference(\n    function() { throw new Error(\"Attempted to call VoiceCommand() from the server but VoiceCommand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/voice-command.tsx <module evaluation>\",\n    \"VoiceCommand\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,4EACA","debugId":null}},
    {"offset": {"line": 1335, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/components/dashboard/voice-command.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const VoiceCommand = registerClientReference(\n    function() { throw new Error(\"Attempted to call VoiceCommand() from the server but VoiceCommand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/voice-command.tsx\",\n    \"VoiceCommand\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wDACA","debugId":null}},
    {"offset": {"line": 1349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1359, "column": 0}, "map": {"version":3,"sources":["file:///C:/Krishna/Project/Syntorion/Vyapar-Sarthi-AI/src/app/dashboard/page.tsx"],"sourcesContent":["import { RecentTransactions } from \"@/components/dashboard/recent-transactions\";\r\nimport { StatsCards } from \"@/components/dashboard/stats-cards\";\r\nimport { VoiceCommand } from \"@/components/dashboard/voice-command\";\r\n\r\nexport default function DashboardPage() {\r\n  return (\r\n    <div className=\"flex flex-col gap-8 p-4 md:p-8\">\r\n      <header>\r\n        <h1 className=\"text-3xl font-bold tracking-tight text-foreground\">\r\n          Dashboard\r\n        </h1>\r\n        <p className=\"text-muted-foreground\">\r\n          An overview of your business performance and recent activity.\r\n        </p>\r\n      </header>\r\n      <main className=\"grid grid-cols-1 items-start gap-8 lg:grid-cols-3\">\r\n        <div className=\"grid auto-rows-max items-start gap-8 lg:col-span-2\">\r\n          <StatsCards />\r\n          <RecentTransactions />\r\n        </div>\r\n        <div className=\"lg:col-span-1\">\r\n          <VoiceCommand />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAoD;;;;;;kCAGlE,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAIvC,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iJAAA,CAAA,aAAU;;;;;0CACX,8OAAC,yJAAA,CAAA,qBAAkB;;;;;;;;;;;kCAErB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,mJAAA,CAAA,eAAY;;;;;;;;;;;;;;;;;;;;;;AAKvB","debugId":null}}]
}